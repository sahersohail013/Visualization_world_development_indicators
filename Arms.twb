<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='1' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='arms_import' inline='true' name='federated.1igw9560opcxwq1313sjl02wg34p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='arms_import' name='textscan.1o2f4pe1v8mxhi0zvd6c11l1k8mi'>
            <connection class='textscan' directory='E:/IV Project' filename='arms_import.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1o2f4pe1v8mxhi0zvd6c11l1k8mi' name='arms_import.csv' table='[arms_import#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1o2f4pe1v8mxhi0zvd6c11l1k8mi' name='arms_import.csv' table='[arms_import#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorName]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>IndicatorName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorCode]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>IndicatorCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[arms_import.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[arms_import.csv_107A2EE416DD4026B64B692444624C9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_516788110508384256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(AVG([Value]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Indicator Code' datatype='string' name='[IndicatorCode]' role='dimension' type='nominal' />
      <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='arms_import.csv' datatype='table' name='[__tableau_internal_object_id__].[arms_import.csv_107A2EE416DD4026B64B692444624C9D]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='arms_import.csv' id='arms_import.csv_107A2EE416DD4026B64B692444624C9D'>
            <properties context=''>
              <relation connection='textscan.1o2f4pe1v8mxhi0zvd6c11l1k8mi' name='arms_import.csv' table='[arms_import#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='CountryName' ordinal='1' />
                  <column datatype='string' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='IndicatorName' ordinal='3' />
                  <column datatype='string' name='IndicatorCode' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                  <column datatype='real' name='Value' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_6F919C3ADB5941EFA21BEBC9BBE1E323]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Arms' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country Name' />
        <param name='target' value='Arms' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 15 Countries Leading in Arms Imports</run>
            <run> - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='arms_import' name='federated.1igw9560opcxwq1313sjl02wg34p' />
          </datasources>
          <datasource-dependencies datasource='federated.1igw9560opcxwq1313sjl02wg34p'>
            <column caption='Rank' datatype='integer' name='[Calculation_516788110508384256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(AVG([Value]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_516788110508384256]' derivation='User' name='[usr:Calculation_516788110508384256:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1igw9560opcxwq1313sjl02wg34p].[CountryName]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_516788110508384256]' derivation='User' name='[usr:Calculation_516788110508384256:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1igw9560opcxwq1313sjl02wg34p].[CountryName]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Angola&quot;' />
              <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter from='&quot;Chad&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter from='&quot;Ecuador&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter from='&quot;France&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter from='&quot;India&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter from='&quot;Lebanon&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Lithuania&quot;' />
              <groupfilter from='&quot;Luxembourg&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter from='&quot;Moldova&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Oman&quot;' />
              <groupfilter from='&quot;Pacific island small states&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter from='&quot;Qatar&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Slovenia&quot;' />
              <groupfilter from='&quot;Solomon Islands&quot;' function='range' level='[none:CountryName:nk]' to='&quot;South Africa&quot;' />
              <groupfilter from='&quot;South Sudan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;United States&quot;' />
              <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:CountryName:nk]' to='&quot;West Bank and Gaza&quot;' />
              <groupfilter from='&quot;Yemen, Rep.&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:ok]' member='1990' />
              <groupfilter function='member' level='[none:Year:ok]' member='1991' />
              <groupfilter function='member' level='[none:Year:ok]' member='1992' />
              <groupfilter function='member' level='[none:Year:ok]' member='1993' />
              <groupfilter function='member' level='[none:Year:ok]' member='1994' />
              <groupfilter function='member' level='[none:Year:ok]' member='1995' />
              <groupfilter function='member' level='[none:Year:ok]' member='1996' />
              <groupfilter function='member' level='[none:Year:ok]' member='1997' />
              <groupfilter function='member' level='[none:Year:ok]' member='1998' />
              <groupfilter function='member' level='[none:Year:ok]' member='1999' />
              <groupfilter function='member' level='[none:Year:ok]' member='2000' />
              <groupfilter function='member' level='[none:Year:ok]' member='2001' />
              <groupfilter function='member' level='[none:Year:ok]' member='2002' />
              <groupfilter function='member' level='[none:Year:ok]' member='2003' />
              <groupfilter function='member' level='[none:Year:ok]' member='2004' />
              <groupfilter function='member' level='[none:Year:ok]' member='2005' />
              <groupfilter function='member' level='[none:Year:ok]' member='2006' />
              <groupfilter function='member' level='[none:Year:ok]' member='2007' />
              <groupfilter function='member' level='[none:Year:ok]' member='2008' />
              <groupfilter function='member' level='[none:Year:ok]' member='2009' />
              <groupfilter function='member' level='[none:Year:ok]' member='2010' />
              <groupfilter function='member' level='[none:Year:ok]' member='2011' />
              <groupfilter function='member' level='[none:Year:ok]' member='2012' />
              <groupfilter function='member' level='[none:Year:ok]' member='2013' />
              <groupfilter function='member' level='[none:Year:ok]' member='2014' />
              <groupfilter function='member' level='[none:Year:ok]' member='2015' />
              <groupfilter function='member' level='[none:Year:ok]' member='2016' />
              <groupfilter function='member' level='[none:Year:ok]' member='2017' />
              <groupfilter function='member' level='[none:Year:ok]' member='2018' />
              <groupfilter function='member' level='[none:Year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]</column>
            <column>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:qk:2]</column>
            <column>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' scope='cols' value='Arms Imported' />
            <encoding attr='space' class='0' field='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' field-type='quantitative' max='5601441975.0' min='-97693455.473177016' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' value='12' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='fill-color' id='annotation_2' value='#00000000' />
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='fill-color' id='annotation_4' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]' />
              <text column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7581214904785156' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</rows>
        <cols>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</cols>
        <pages>
          <column>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</column>
        </pages>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='8518426229.5081978'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[sum:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.204545'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>10</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1990</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='14930908196.721313'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[sum:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.295454'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>14</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1990</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7962984269.3219547'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.18542'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>4</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1960</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='17955252969.644028'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.562599'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>6</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1960</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='8817341816.189642'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.70523'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>6</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1990</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='17806669048.449646'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.0824091'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>9</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1990</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2071004097.7157311'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.797047'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>10</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2013</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='4321658244.4844522'>
                  <node-reference>
                    <axis>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.177121'>
                  <node-reference>
                    <fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>13</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2013</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{B3CA78A6-6DF9-478D-92D8-B2DE48DBF8A2}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>2019 Arms Imports</run>
            <run> - South Asia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='arms_import' name='federated.1igw9560opcxwq1313sjl02wg34p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1igw9560opcxwq1313sjl02wg34p'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:qk]' included-values='in-range'>
            <min>2019</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]</column>
            <column>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1igw9560opcxwq1313sjl02wg34p].[Longitude (generated)]' field-type='quantitative' max='22278057.344570037' min='4431012.9245781824' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1igw9560opcxwq1313sjl02wg34p].[Latitude (generated)]' field-type='quantitative' max='4939750.7091831453' min='-1469208.2927222881' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' />
              <text column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]' />
              <lod column='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]' />
              <geometry column='[federated.1igw9560opcxwq1313sjl02wg34p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Tableau Bold' />
                <format attr='font-size' value='9' />
                <format attr='text-decoration' value='none' />
                <format attr='font-style' value='normal' />
                <format attr='font-weight' value='normal' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igw9560opcxwq1313sjl02wg34p].[Latitude (generated)]</rows>
        <cols>[federated.1igw9560opcxwq1313sjl02wg34p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5DDE15B8-77A1-4A52-B439-F67A10E0E7D2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Arms'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='50000' id='3' name='Bar' w='98400' x='900' y='1250' />
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12750' id='5' looped='1' name='Bar' synchronized='1' w='16000' x='82700' y='29125' />
        <zone h='49625' id='6' name='Map' w='98400' x='800' y='50500' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='7' name='Map' pane-specification-id='0' param='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' w='21900' x='75400' y='58875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='95' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='94' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='50000' id='3' is-fixed='true' name='Bar' w='98400' x='900' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49625' id='6' is-fixed='true' name='Map' w='98400' x='800' y='50500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='7' name='Map' pane-specification-id='0' param='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' w='21900' x='75400' y='58875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12750' id='5' looped='1' name='Bar' synchronized='1' w='16000' x='82700' y='29125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0DEE94F0-591B-4C73-99CF-E583B541ED9A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]</field>
            <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA1A34FC-5B8D-4662-ADAE-95F7582F9BF5}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</field>
            <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]</field>
            <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C5A2E06D-1369-46A5-85F8-7DD844087BE1}' />
    </window>
    <window class='dashboard' maximized='true' name='Arms'>
      <viewpoints>
        <viewpoint name='Bar'>
          <current-page>
            <multibucket>
              <bucket>2014</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[avg:Value:qk]</field>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:CountryName:nk]</field>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[none:Year:ok]</field>
                    <field>[federated.1igw9560opcxwq1313sjl02wg34p].[usr:Calculation_516788110508384256:ok:1]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>834000000.0</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>2014</value>
                  <value>8</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{D604A801-7296-4D55-B502-86A6A28AAD20}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Arms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAer0lEQVR4nO3dd5Rb133g8e976B2DGQymF7YZVrGTKqRlyYqLZLnIUiQdr84mZ/fYWTvr
      9cZnfeJs9ux6HbfYTrJK7GTjuCjOusrqFCVbsiolWZZIiW3I6QUDYBraoOO9t3+QGokWKXE0
      Dw8zxP38BQKYe+97fD+82969kqZpGoJQo8wApVwKRBwINUgGxMUv1Cy52gUQhGoSASDUNBEA
      Qk0TASDUtIoGwBub1tXqbVWrkK2mVadfoRrHWq18NU2ffM1LT+LCNCSks2Fw+PEDzEwMVzI7
      QWeb911H86qet/3eSu5DrGgAvFF6dorYyIBR2Qk6WLNtb7WLUHGiDSDUNN0DQNO0qtX3Bf1p
      mka5XD7v/6mqqguvFUU55zuapp3z+XKlewCkEnOMTkT0TlaokqefeZaHDhwkEo0yMDhEMpki
      mUwxEZ7kX//tx5zsO4Wmafz5f/8fzMzOMjIyysDgELHYFN/93g+IxmL0Dwxw+MgrKIpS7cN5
      E93bAL66erL5qN7JClWyaeNG7r7nXg499wL9/QPs2L4NTdNIJJM4nU76+wewWGw4HE4ePvgo
      jcEGEokkyVQKn8/HQwcO4nI6GRgawulw0NOzrtqHdA7dA2B2KkoinaUxpCHJkt7JCwYrFous
      W7uGpqYQra0t+DweisUiocYgkixTV+cHycRffuHz9J06TUtzE4NDw7hdLqJTU3R3daKUFRob
      g4RCoWofzpvoHgD1jU3UN555vfxrgMLbaWoK0dT01heuooFJgk0bNwAQCAQAWL++d+E7q1ev
      qlwhl0D0Agk1TQSAUNMkTdO0UjZZkcRVJOSz44SpRAJTFcJN00AyuiminRkdNTpfvY/V5nBi
      tljf9nuvVYGMpJ09x0ttZho2EpxKp8lns0Zlt0DTJCTJ2HGJM7m9Pg3ECKHmZpxer+EX4kpn
      WAAk5uLMTE0ZlV3N8Xh9OD3eahdjxRFtAKGmiQAQapruATA7FeHoidMoYjqQ4Y4dO87I6CiF
      QgFVVXn6mUMMDA5SLpcplUrVLt6ypHsbwO5wUt9gRZZW9jzxlSiXy3Po0CHMZjMup5PZeJyJ
      iQBHj52gr+8Uf/75z1W7iMuO7gEwNzdLXjGjBetB9EgYKhRqZMvmTTQ2NpJIJHBMhOnoaCef
      L+Bxu6tdvGVJ9wBo73x9yFtMhTBWR0c73Z3tC//etXNHFUuzMohGsFDTRAAINc2wqRCzs3NQ
      hSeEVIyP8tca/0Y2gdweD2abrSojwWIqxEVQFYVy2fiuuGrNBQIuGAFOpxOf3697tqLrefEM
      C4BYJCKmQpzV3NpSkQAQFk+0AYSaJgJAqGm6B8BMLEJf/3DVlulbKUqlEg88eIDnnn9hYQmR
      8YlwtYtVc3RvA7hcTiamU3one8mJTU0RDDYQDk/yw3/9N1RVZXp6mi2bN9M/MIDX4+WDN3yA
      +vpAtYt6SdM9AFLpNBazXJ3elxUk2NDA8y/8lrm5OD6fD5/Xi8/no1gs0tbWRijUKC5+A+ge
      AKHmNkLNZ16LqRAXZrPZ+NhHP4KqqkiShCR+LarCsG5Q4fxkWfRDVJM4+0JNM+wO0BAM4vF6
      jMpuwXJcFcLtMf48COdnWAD4vRJW89svsaE3VXvn80UkSz2Syb7ov9NrnopQeYYFgJR8hML8
      q0Zlpwtr2ycwuZbXYq6CvkQbQKhpIgCEmqZ/AGgqY+OXzpD+6OgYQ8PDpNPzb/m9UqnE/Q8+
      xNCw2AhwJdG9DTAdjZDOF/ROtmpOnOxjZHSU7du2MTs3i6aBz+vhlVePcvnePZw6fZpbb7mZ
      UqlEMpnipZcP8+RTz9De3s709DR79+yiu6ur2ochXIDOdwCNXKHA3OwsyiUyG87pdBIKNTIw
      OMjs7BxKuYzZZEbVNI4dP8FEeJLRsXEkSSKVSuGwO4hEYxQKBaanpxkbG2d+PlPtwxAuwLBH
      IgvhH6Jegr1AmqYxNj5BZ0f7G96DZCpFoZAn1NhY6WIuqMajidXKd8U9EnmpkiTpnIv/NV6v
      F1kSi9Uud6IXSKhpht0BZHtnVWY8LmUqhGQWq6ld6gxrA2RzeRx2W0XyecsyvIOpEEsN1GpN
      hRBtgMUz7A5gmvsp+RXQCLav/iKYXdUuhmAQ0QYQapoIAKGm6R4A6cQcg6PhFb03QKFQeNOU
      Bk3T0LRzj2pmZpayorzpfWHl0L0NEJuawtvQjMTK3SDj5cNHOHb8BKb3mACYmZ0F4LHHf8PV
      79qP1+NhZHSUsqLi9bgJhULE43H27tldzWIL74DuAVBXV8f4xAQBv4+V+rhr36nTxOMJXj58
      hEKhgMlsxmqx0NTUxOjYOKtXdXPg4KPs2b2TcrnM4NAw4fCkCIAVSPdu0GIhT1EBt9O+IqdC
      2Fd/kVxRxmQykc/nKZVKyLKExWKhUCjgcDqxWCzMzs7i9XiQJJlSqYiiqAQCdYDoBjXCsu0G
      tdrsGP/go76cTgcANtu5R+J5w7O8zU1Nb/jEYUSxhApYoZUUQdCHcc8Em71IlqBR2b1zYoGq
      mmLYVIh8oYDdZvxUiJVcP10s0QZYPMPuAJbIPKTnjMpuwXnreF4bdIp1NwUj5wKVVMgZv0XS
      eX8gbOIxCOEM0QgWapruAaAqZTLZ/IoYBU4kEszNvX21TNM0Uqn0m97LF848/J/P55menhFT
      IlYg3esCo6Mj2Fx1OJ2LX1LQaPfe/yBXXL6H2NQ0AIFAHfPz80SjMYqlEqqicu01V1MslvjS
      l7/Kf/vcf2V6ZppSqYzf7+Pe+x/ktls+xqvHjpOIJ1izZjX5fJ5QKMTs3Bzbt14mlj1f5nQP
      gEK+QDw9SUNDAHM1uiQWQVEUcrk8A4ODyLJMLDZFYzCI3+9jYGiYq/fvA2BgcICGhgbuvf8B
      1q1dQzg8yXwmQ3trK088+TR1dXUcO34CTdNIp9OcOt2Px+NlQ28PDocYJFvOdO8GLeTmicWz
      tDc3okmvd4PSPw3xnG75LInfAeuCHHnlVRRF4fCRVwgGgxQKeS7bspnjx0/yvvdex/ETJ9E0
      ja6uTgKBACMjI4QaGxkaHsHr9RCejLBhfS+qqmK1WonHE4yNjTMXj9Pe1kYoFKSludmwu4Do
      Bl08w8YBlmMAVIoYB6g8vc6x6AUSapoIAKGmGbcyXL6IzWqpSD5v5YK35wrWT0QVqPJW3FSI
      Rw5PMBJLv/0XdaYB+ze3sG31CpiIJxjOsAA4HU7wfF/MqOzOsbrZKwJAOC/RBhBqmggAoabp
      vypEZIKR8Aw7d2xdVs+WHD12HL/Px4mTfWzbugWbzU7/wABms5nOjg4cDjtTU9MMj4yQzxcw
      mUzYbFY2bdpIIV9gIhymtaUFi8WM2+MhkUgQamwUUx1WON0DoLExSEG1YpJA1TvxJVAUhUKx
      wNT0NI/86jFkSSJfLBJsaOCBhw6wursbSZYIBAL09q7jscd+g2wy4fV6+fndv6Q+EGD/vqv4
      5b33s2P7Vvr7B/mzz34Gs9lU7UMTlkD3AMhmCzQ3L78G5/reHh77zRNcecXlSBLMz2ew2+3E
      YjH2X3UVTaEzUxxWdXeTy+Xo7OqkraWFXD7PlZfvpaOjg1KpxP59V9LW2orD7mDlrnwkvMaw
      cYBv/OLlqvUC/fvrerlhT7dh+YlxgMoTUyEEQQciAISaZlgVaCSaoKRUJJu3LoMGjX4HdW7j
      VqQQVaDKW3FTISS7k3K58jcckwzrAq8fVrUuCmFlMCwAxtIwni5XPB+b6dwAEIS3ItoAQk0T
      ASDUNN0DYHJ8lJOnh1CqPEY0MzND/8BgdQshLHu6V5aLxSLFYhW6e35PLl/g1aNH+fvv/BM7
      tm1FVVUCZ1dvaGtrxWw2cfutf1jtYgpVVpEdYiR7+fxLEhpE0zQikQg7tm8jEKgnGo2wqrsb
      h8NBS0szDQ31VSydsJzoHgC+QAO+s6+rNRlOkiR279oJQHtHp+gGFS5INIKFmiYCQKhphk2F
      SGaLmMxGDFBJuK2v13lW8jD9YompEItn2JBp8vQk2blMxfPxNvpwb2qreD7CpcGwAJgZnCLa
      F6l4Ps0bWmkRASBcJNEGEGqaCAChpuleBZqKhpkvyXS3NV9gg67KKysKd//yXhobg3R2dNJQ
      X4csm3A6HUiShKZpyLKIfaECAZDL5ZmbS9PW2oy5SgGQSqWorw/QHApx4OAjeD1uSqUSxWKR
      UCjEM88e4lt//dXqFE5YVnQPAI/bzXxRqtrFD1Dn96OqKolkkvdcew2zM9NIkkx9fYBIJML+
      fVdWr3DCsqJ7AASCIQJnV0Wp5lSIP3jPtcCZPuredWsWPutZt7ZKpRKWI1ERFmqaCAChphk2
      ENa2s5uWjZUfoLJ7xa6MwsUzLABkp4RmrewNJxhqFN2bwqIYFgDRyUlmpqYqmkd9w9UiAIRF
      EVeLUNNEAAg1TbcAKOazzCbSZFJxJqKzVVs4/Iknn+LAwUfOee/wkVeqVBphudOtDaBJJvLZ
      FOlyETMaZbUeUxXuL12dnSSTKV747YuUy2VO9p2mWCyQSqd56uln6Ghro7mlme6uTtauWfP2
      CQqXNP3uALkMk5EopWKRxHzB8KehXmOz2XC6nIQnI2QyWTas72XjhvWUy2XWrl7NVVddycmT
      fazqNm6/AGH50u0O4PR4uWzzBsxmM6qmVW2LpObmJgDWrlkNvPlxvVw+z40fvB6TSWxtJOgY
      ACaTmdeuqeXcsnbY7XR3dVW7GMIysZyvVUGoOMMGwuqDDbjcrormIQbBhMUyLABMZgsut/7Z
      ebweHA4x/0d4ZwwLgN/8+jFOHD+he7of/NCN7Ny9U/d0hdog6gxCTRMBINQ03QJAVUpkcwWU
      UpFcvqhXshclEony8MFHmZ6eOe/ng0PDC681TWNoePiCnwu1Rbc2QC6XZyaRJuB1k0xnaGtt
      1ivptzUyNkY0FqPv1GkeevggrS0tpOfTtLa2Mjo2jsVkIhaLkclkKJXKTM/M8Myzh2hrayOT
      yZBIJDnZd4rr3/9eJEmspV5LdLsD2B0OJFXB4XSiqgqaZtx0OJMsY7FYON3fz+n+fk72ncLv
      8zM4OEg4HEGSJQ4feYW+U/1EolE0TWNgYAhFUXjxxZdwOOzIsmRomYXlQbc7QDadQtE04vE4
      CjKahmELY+3etXNhQ4w3Gh0dY2RsnP1XXXHBX/brrr2m0sXTzcjIKL+45z5O9w9QXx/g5ps+
      wvatlwFnqnZPPPk0Dzx4gHKpxLXXXM2NN3zgnCkf+Xyeu++5j9jUNJ/9z59aOCeapvHU08/y
      wIGHycxn2L1rB7ffegs2m3Gbi1eLbncAjz9Ad2cHwWCQ7vYW5GrNhnuDzs4OrrrqykuiWhOJ
      RPnkn/4XZFnijo/fRltLC5/7/BcYGBwC4PHfPMlXvvYNLt+zi/e99zr+5ft38aMf/3Th7x/5
      1a+57Y4/5jv/9F2GR0bOSfvhg4/ytW/+DXt37+LDH7qBg4/+mq98/ZuoarUWtjGO2FF6hXA4
      HNz5rb9mzZrVSJLE3t27eOqZZzl+4iSrurv40Y9/ykc//CFu+dhHFwL+O//3X7j5po/gdDi4
      /8GHufXmmxgbn2BsfHwhXVVV+fkv7+X2W2/hpo98CEmSaGlu5lOf+TPu+PjtrOruqsrxGsWw
      AGhpba3IL4q/zq97msuR3+/D7z+z+5qmaRw+8irTMzN0dLSTSCYZHRvnU3/yyYWLf/u2y8hk
      MoyNjdPbs45vfu2vsNvt3PntfzwnXU3TSKXS1Pn9C3+7YX0vdX7/QnBdygwLgB27d7HvXfuM
      yu6SpSgKP/nZ3Xzvh3dx680fY+uWzYxPhFEUZSFAANwuFxaLhWQyBYDdbj9verIss3nTBu65
      7wG2b7uMUGMjQ8MjmEwm5ufnDTmmajIsAH734E8Y63tVl7S2vvt6Nl11rS5prSTFUom/+ds7
      ee6FF/mff/kFrrriciRJwmI2IwGlUmnhu2VFQVUVrDbrW6YpSRJ/+p8+yZe++nVu/fgfIUsS
      q1Z1kUqna6IRbFgAaJqGplMVSNMu/cbZ71NVlb+789scPX6C7//zt6mrq1v4zF/nx+VyMTI6
      xvqeM2ufTk5GUBSVplDj26ZdXx/gm1/7Mun0mV98VVP52K3/buGhokuZmAqxQoyOjfHggYN8
      9jOfPufiB7DbbFxx+R7uufc+stkcpVKJn919D+t7ewg1vn0ATE/PkMvl8Xo92O02vvu9H9LZ
      0V4TCwmv2F6gTCaDJElkczka6s+/87uiKMSTKerr/AwODbFm9eu/aPl8nlK5jMftZmR0jPDk
      JFfs3bNsu0yPn+ijVCpx5z/84zl9+x++8QY+eP37+cR//GM+9/m/4LY7/gir1YpSVvjG176E
      LMtMhCf5X1/6CqqqEotNkc/n+Q+f/DQOh4Ovf/l/89LhI3zr7/6e1pZm4vE4DoeDr/7VF7Fa
      37r6dCnQbZvU+WScaDxDndPEWGSOLVs2Ikmvb5P65M++z9hJfZYn2XrN9cj1bVgsFo4dP4HH
      7aaxMciJk30Ui0U2blyPx+1meHiUsqKwdctmvvfDu/j47beRSqXIZrNIksTxEyf50I038Pjj
      T7Bhw3ry+TzxeBy/30+pVKZQLNDc1MRcPM4LL/yW97/vvcRiMQKBAFarld6edectXyW2SY3F
      phgeGX3T+21trbS1tgBQLCuc6uujVC6zcX3vQh0+m81y9Nhxfn+g22Q2se2yLZhMJqamphkd
      G8PlctHbs25Rz0yv5G1Sdd0nOBKJ4rSZKUpWGuq8aFQuANzt6+g7dYrMfAafz8dkJILH48Zq
      tfLSy4fZsL4XTdXweDzkC3nC4UnsdjvXvPtqfvrzX+ByuggGG2hrbWVycpL163sZHh5ZWM/I
      JMvk8jlk2cTx4yfYuHE9mqoRjcVoa2ulXFa4+aaPnLd8Yp/gylt2+wQn5qaZSyQpuRwUylnq
      /d6KToXo6uzAYjbTEGxAVRTKZQWz2UQymWLPrl2YzSYymSxenx9ZAofDTiKZxOf1csfHb8fl
      cpFMJGlrayWZTJFMJrn2mnefKbMGknTmBJdLZfZdeQU2uw00SKaSOJ1O8fjlJUK3APAHgvhf
      2xrmrEr21UiSRFtb65vedzqdC6/r6urO+XWqDwQAaG05U2Xw+870mwcCdQQC5zYsL+SNfe3C
      yid+xoSaZlgvkN3lxuUP6JKW1S4eghf0oWsj+Pepb2gE5wtF7G8zKlkJK7mBtliiEbx4xt0B
      IocwzU8sOR3N24HasV+HEgmCkesCFVPImdiS01GtXh1KIwhniEawUNNWbACk02nK5XK1iyGs
      cLpVgeaTcWbnC7jMGtG5edb3rqVS02qyuRw/+n8/4V3792EyyczOxdnQ28uJkyfp7OxgenoG
      n9dLLp/HarPhsNnIZDLY7XYy2Sy9PeuW7ZwfwVi6BYDbV0c6G8XlcqJMV6ZX6TVWi4X1vT0c
      eu55/D4fbo+b//MP3+byvXt46plnGRgYYtPGDWiqSrFcRtI08vk8iqri8XjoWbdWBIAA6DwV
      YmpmFkXxYbfbK74ghCzLfOB970XVVKxWK/WBAPc98CC3/eEtdHd2Eg5PnvmlN5lx2G3YbTY0
      NCYnI+LiFxYYNg5gOn0/crx/6WnWrUVZd+NFf38l91EvlhgHWLwV2wgWBD2IABBqmmFVoEIu
      i82iw8Z0kgwmy0V/fSXfnhdLVIEWz7hHIvsPUJpbWhvAfMVnkKyX/koFgnEMCwApehhl+Ikl
      pWHe8yeA822/JwgXS7QBhJomAkCoaboFwHwyTjg2i6aW6Ds9pFeyb/Lzu+/hB3f9iFQqzfz8
      PL9+7HHS6TTh8CRzc3GePfQcmUyW2dlZCoUC8XhCrPsvXJDuUyEmwxF4bbOJCoy45nI5fD4v
      Dz38MFNT00xNTeP1euk7dZpoNIbb7cLr9fK9H9zF1su2UCorfPiD19PQcP61g4TaputUiHAk
      SijYQCqdQK3M9c/uXTvo7enh2UPP0dHejsfjQdM0Nm3cQGMwSCjUSLlc5l3799HR3obb48Xu
      OP/CsIJg2DhA8dG/QF1iL5DtjoeQHItbDn0l91EvlhgHWDzRCBZqmggAoaYZtypErB+rmllS
      elJoE5K8uGbLSr49L5aoAi2eYSPBsbk8uVTqHf1tQ1sXDa0dOpdIEAwMgJGjv3vHi+Ne9u4P
      iAAQKkK0AYSaJgJAqGm6BUAuk2Z6Lkl8JsbgaBi9Jx9MTU1zsu/UBT//7Yu/q4mNnQV96dYG
      sNgclFIzpNIJzK66M010HXsGcrkch4+8wsFHfkVzcxPdXZ387Be/ZPu2rRw9doy9e/bol5lQ
      M/SbDJeKMzo+gcPtZXZmGkXnW4DD4aCjox2Px01rSzONwSDbt20l2NDANe++muamkL4ZCjVB
      1w0yLt99ZoOMlrMbUOhZIWlsDNLYGOSqKy5feK+7u0vHHIRaJBrBQk0TASDUNMMGwrq27CTU
      9c52Hm9o7dK3MIJwVsXnAr1GUVRMJuNvOJomIUkGPxF2dp6K0SswVuVYq5WvBhpLz7eidwD5
      jaMBJvncfxtElTA8X0060wNs9Ly0ahxrtfLVzp7cpeZrWBWoGv8x1cq3Wkvv1to5lnTIVzSC
      hZpW4TuAxvBAP8lsie72IMeHZrh8+3qee+45du+9ArNO4ZeYnWYkOseWnm6O9/Vjsjpp9FqJ
      zCQINrcxF5tAkazUu2USRTs9HQEOvdzHvj3blnBoGqMjQyTTOVpaQ4Qnp/H4A5hL8yQyBbq6
      2hkeHsfh8VJMTRPsWIejnGJwrsi2nq53nG0+m2VkfALZ6sCi5kjOF1m7ppPBoTHsbh8OqUg8
      laWzs43DJ4a4eu82nv/tb9m6fSf2JS1NqfHKiy/QvG4LMxPDKLKV9qCXsegsgWAz2XiEvCLT
      1uBkaFZhZ28bTz5/hHddsWsJecLQwCmKqpn21iD9g+O4PD5cphKzyXnaOrsZHxnB4nRjKs/j
      8LdQ79A4NjbD7s09F5V+Ze8AqkJBtdDT5mdyJkk5nyM+F6NkcqDnSiW+QAMOq0wmMUugqQOZ
      MjOpLJs29jI9PojDG8RjlUnnSuSy80QnIzg97iXn29raisViZi46y5qN6ynm0mTLGj3dzZw6
      dpy2dRvQSnkUk4XU3AyxZA6HvLRtnexOO2atjKKWKZYtbOys4+W+MTrXrEMrZckWFTava2Ui
      Mouk5JlNxMmVJNQlnu9YeByn108mm8DubsTrkBmJJdi0sZf5RBRNdtBS52QmkSGTyTIdjWB1
      Lf0cS5KMUiowORSma+MGlFKOVL7Mxg3rGHz1ZYJdazGpJbJlifx8gqnZJA7rxQd6Ze8AkoxS
      zBKeyuH1uJCbgrzaN0F7k0/XbHLZDOn0PFpDHfHYFEq5jNdmYnJyEpunnnRyDjQFt91M0Osg
      nMzhdSx9od6jx47T0t6NVEoTmYigqBKSUmAyOkOwuYlYOIxSVpEkGYtWpGRxQTG3pDzzhTK+
      hkbC0WksqIxFs3SE/EQjUYplMFNifHIar8eNKjdx/Ggf7e3NSz7WUlkhMTuNGRvmUgpQ8Dvt
      TExGweyikE0yXZZxu2y02qycmkxT71v6Oq5ujxeznKJQlpgcnUQpa1glhclwmLqWDmYiEdRy
      GVkCp0UmWQKLfPFzECraDQpQKuTJFMp4XXbKmoRSKmE2yZgtVt26CedTSbL5Ii6PF8oFJIsd
      h9XEXCJNXZ2PQjaDIpmxWWRk2USprCBLYLUuYeNuTSMen6NU1vAH6simU7g8PiS1RDpXxO91
      k04lsTndoCqYZQlFMoGqLClfRSkTjydwe/2YtDKZQhmfx7WQlxmVZCZPnddFUVFRywpmswmT
      2Yy8xBOulEuokolSPoMqWXE5LMTjSXx+P6VClqIq47KZUSUT5VIRkywv7RwD+VyGbFGlzusm
      nUpgc3oxSwqJdJ5AnZdMKonJ5kRGxWKWKSoSMupF51vxABCE5Uz0Agk1TQSAUNNEAFSFRi6X
      v8hhHI1iqXTRKatKmbLy5kZgJBI959+J1LxYNBgjd4gRFpQyc3z7zu9z8yc+TTp8itl0Foui
      UVA17GboWruO/lP9rOrZQGvQwb33/ZqeVSHSmTwmm4uOtgZGRqI4/QHqbQqjsSQb17Zw9Pgg
      6dkJ4o5urtvSwqmRSXbs2MqRl15maDzKHbfdBECxVOKuux9h/+4tbN24tspno7rEHaAKTh89
      QtfGXl763VFefullNm1ez0wiTzqVpM1v4vRQmLlkljfeIsYmpwhaC2TSCidOD2P2tTLSf4wj
      JwZZFzLz7IuvEp43s2NDNz09PTzz7LNIxSSP3HcvtpYN1HkcABSLJb71zz8nk83jdonddsQd
      oAqiaY1r9u/juedfwtPRTcDtwOl0ADJmqw2Hy4O5NM/QWJjWxrW4XA7sNhmLzYqjbKOs5Rk4
      eZT6hkZ8pgJH+qOs7mgib2nCG8gzcfgU3Z0d5LCza3cXL548jKSd+a0rlsv8wf6dqKrKmq7W
      6p6IZUB0g65AydgIU0Uva9sD1S7KiicCQKhp/x858N2/++hMZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
