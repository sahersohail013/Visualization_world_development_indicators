<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='1' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='refuge_population_asylum' inline='true' name='federated.0rsvy8t12hbk5l1h7hmee1s5f0h0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='refuge_population_asylum' name='textscan.0fngg3f1eq9oc6169rx4j0d8ek7e'>
            <connection class='textscan' directory='E:/IV Project' filename='refuge_population_asylum.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0fngg3f1eq9oc6169rx4j0d8ek7e' name='refuge_population_asylum.csv' table='[refuge_population_asylum#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0fngg3f1eq9oc6169rx4j0d8ek7e' name='refuge_population_asylum.csv' table='[refuge_population_asylum#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorName]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>IndicatorName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorCode]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>IndicatorCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[refuge_population_asylum.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Indicator Code' datatype='string' name='[IndicatorCode]' role='dimension' type='nominal' />
      <column caption='Indicator Name 2' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
      <column caption='Value 2' datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='refuge_population_asylum.csv' datatype='table' name='[__tableau_internal_object_id__].[refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='refuge_population_asylum.csv' id='refuge_population_asylum.csv_C9CF52A065304B5CBE476DE16FE9278F'>
            <properties context=''>
              <relation connection='textscan.0fngg3f1eq9oc6169rx4j0d8ek7e' name='refuge_population_asylum.csv' table='[refuge_population_asylum#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='CountryName' ordinal='1' />
                  <column datatype='string' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='IndicatorName' ordinal='3' />
                  <column datatype='string' name='IndicatorCode' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                  <column datatype='real' name='Value' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='refuge_population' inline='true' name='federated.14srq3w1owvxux194omgn0zcfwuk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='refuge_population' name='textscan.1nn0js91spg8kf1az32wh0d1v08e'>
            <connection class='textscan' directory='E:/IV Project' filename='refuge_population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nn0js91spg8kf1az32wh0d1v08e' name='refuge_population.csv' table='[refuge_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1nn0js91spg8kf1az32wh0d1v08e' name='refuge_population.csv' table='[refuge_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountryName' ordinal='1' />
            <column datatype='string' name='CountryCode' ordinal='2' />
            <column datatype='string' name='IndicatorName' ordinal='3' />
            <column datatype='string' name='IndicatorCode' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='real' name='Value' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorName]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>IndicatorName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorCode]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>IndicatorCode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[refuge_population.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_622622701612044289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(AVG([Value]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Indicator Code' datatype='string' name='[IndicatorCode]' role='dimension' type='nominal' />
      <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='refuge_population.csv' datatype='table' name='[__tableau_internal_object_id__].[refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='refuge_population.csv' id='refuge_population.csv_7F58521ECA6143F0B018BAEF966C61A1'>
            <properties context=''>
              <relation connection='textscan.1nn0js91spg8kf1az32wh0d1v08e' name='refuge_population.csv' table='[refuge_population#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='CountryName' ordinal='1' />
                  <column datatype='string' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='IndicatorName' ordinal='3' />
                  <column datatype='string' name='IndicatorCode' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                  <column datatype='real' name='Value' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_A5A70AA6EB0C4B9BA0F6502940F8F5EF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Refugee' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country Name' />
        <param name='target' value='Refugee' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 15 Refugee Population by Country or Territory of Origin</run>
            <run> - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='refuge_population' name='federated.14srq3w1owvxux194omgn0zcfwuk' />
          </datasources>
          <datasource-dependencies datasource='federated.14srq3w1owvxux194omgn0zcfwuk'>
            <column caption='Rank' datatype='integer' name='[Calculation_622622701612044289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(AVG([Value]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_622622701612044289]' derivation='User' name='[usr:Calculation_622622701612044289:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.14srq3w1owvxux194omgn0zcfwuk].[CountryName]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_622622701612044289]' derivation='User' name='[usr:Calculation_622622701612044289:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.14srq3w1owvxux194omgn0zcfwuk].[CountryName]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Antigua and Barbuda&quot;' />
              <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter from='&quot;Ecuador&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter from='&quot;France&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Haiti&quot;' />
              <groupfilter from='&quot;Honduras&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter from='&quot;India&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter from='&quot;Lebanon&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Lithuania&quot;' />
              <groupfilter from='&quot;Luxembourg&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Moldova&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Oman&quot;' />
              <groupfilter from='&quot;Pakistan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter from='&quot;Puerto Rico&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Slovenia&quot;' />
              <groupfilter from='&quot;Solomon Islands&quot;' function='range' level='[none:CountryName:nk]' to='&quot;South Africa&quot;' />
              <groupfilter from='&quot;South Sudan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United States&quot;' />
              <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:CountryName:nk]' to='&quot;West Bank and Gaza&quot;' />
              <groupfilter from='&quot;Yemen, Rep.&quot;' function='range' level='[none:CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:ok]' member='1990' />
              <groupfilter function='member' level='[none:Year:ok]' member='1991' />
              <groupfilter function='member' level='[none:Year:ok]' member='1992' />
              <groupfilter function='member' level='[none:Year:ok]' member='1993' />
              <groupfilter function='member' level='[none:Year:ok]' member='1994' />
              <groupfilter function='member' level='[none:Year:ok]' member='1995' />
              <groupfilter function='member' level='[none:Year:ok]' member='1996' />
              <groupfilter function='member' level='[none:Year:ok]' member='1997' />
              <groupfilter function='member' level='[none:Year:ok]' member='1998' />
              <groupfilter function='member' level='[none:Year:ok]' member='1999' />
              <groupfilter function='member' level='[none:Year:ok]' member='2000' />
              <groupfilter function='member' level='[none:Year:ok]' member='2001' />
              <groupfilter function='member' level='[none:Year:ok]' member='2002' />
              <groupfilter function='member' level='[none:Year:ok]' member='2003' />
              <groupfilter function='member' level='[none:Year:ok]' member='2004' />
              <groupfilter function='member' level='[none:Year:ok]' member='2005' />
              <groupfilter function='member' level='[none:Year:ok]' member='2006' />
              <groupfilter function='member' level='[none:Year:ok]' member='2007' />
              <groupfilter function='member' level='[none:Year:ok]' member='2008' />
              <groupfilter function='member' level='[none:Year:ok]' member='2009' />
              <groupfilter function='member' level='[none:Year:ok]' member='2010' />
              <groupfilter function='member' level='[none:Year:ok]' member='2011' />
              <groupfilter function='member' level='[none:Year:ok]' member='2012' />
              <groupfilter function='member' level='[none:Year:ok]' member='2013' />
              <groupfilter function='member' level='[none:Year:ok]' member='2014' />
              <groupfilter function='member' level='[none:Year:ok]' member='2015' />
              <groupfilter function='member' level='[none:Year:ok]' member='2016' />
              <groupfilter function='member' level='[none:Year:ok]' member='2017' />
              <groupfilter function='member' level='[none:Year:ok]' member='2018' />
              <groupfilter function='member' level='[none:Year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>4</bucket>
              <bucket>7</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
              <bucket>13</bucket>
              <bucket>14</bucket>
              <bucket>15</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]</column>
            <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:qk:2]</column>
            <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' field-type='quantitative' max='7000000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' scope='cols' value='Refugee Population' />
            <format attr='height' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' value='63' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]' value='44' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' value='11' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='fill-color' id='annotation_1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]' />
              <text column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</rows>
        <cols>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</cols>
        <pages>
          <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</column>
        </pages>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1788788.2219705549'>
                  <node-reference>
                    <axis>[federated.14srq3w1owvxux194omgn0zcfwuk].[sum:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.2'>
                  <node-reference>
                    <fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>8</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1960</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2940543.6013590037'>
                  <node-reference>
                    <axis>[federated.14srq3w1owvxux194omgn0zcfwuk].[sum:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.2'>
                  <node-reference>
                    <fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>13</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>1960</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='36'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2125377.6435045321'>
                  <node-reference>
                    <axis>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.440064'>
                  <node-reference>
                    <fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>10</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2017</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='3817220.543806646'>
                  <node-reference>
                    <axis>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.782336'>
                  <node-reference>
                    <fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                    </fields>
                    <multibucket>
                      <bucket>12</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2017</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{87DDB939-3B69-4C79-828C-F31E30CF56A8}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>2019 Refugee population by country or territory of origin</run>
            <run> -</run>
            <run fontcolor='#000000'> South Asia </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='refuge_population' name='federated.14srq3w1owvxux194omgn0zcfwuk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14srq3w1owvxux194omgn0zcfwuk'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:qk]' included-values='in-range'>
            <min>2019</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]</column>
            <column>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[Longitude (generated)]' field-type='quantitative' max='21321339.21625711' min='4107643.5296825981' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[Latitude (generated)]' field-type='quantitative' max='4788084.7318218425' min='-1439986.0667729154' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' max='3000000.0' palette='brown_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e2e6f0' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' value='Avg Refugee Population' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]' />
              <lod column='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]' />
              <color column='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' />
              <geometry column='[federated.14srq3w1owvxux194omgn0zcfwuk].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='text-decoration' value='none' />
                <format attr='font-style' value='normal' />
                <format attr='font-weight' value='normal' />
                <format attr='font-family' value='Tableau Bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14srq3w1owvxux194omgn0zcfwuk].[Latitude (generated)]</rows>
        <cols>[federated.14srq3w1owvxux194omgn0zcfwuk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2E3E805-8AC1-4D27-90F7-4237C316F5A7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Refugee'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='51000' id='10' name='Bar' w='98800' x='500' y='625' />
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12750' id='18' looped='1' name='Bar' synchronized='1' w='16000' x='82800' y='30000' />
        <zone h='50500' id='3' name='Map' w='99600' x='300' y='51875' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7750' id='8' name='Map' pane-specification-id='0' param='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' w='19600' x='78600' y='58750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='110' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='109' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51000' id='10' is-fixed='true' name='Bar' w='98800' x='500' y='625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50500' id='3' is-fixed='true' name='Map' w='99600' x='300' y='51875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7750' id='8' name='Map' pane-specification-id='0' param='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' w='19600' x='78600' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12750' id='18' looped='1' name='Bar' synchronized='1' w='16000' x='82800' y='30000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A52D6C94-DC8A-49E7-A4A6-4591BDABEF10}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Bar'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]' type='color' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03F127E5-84A2-46C4-965E-CA8884728FA6}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rsvy8t12hbk5l1h7hmee1s5f0h0].[none:IndicatorName:nk]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:IndicatorName:nk]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
            <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0C39C7EC-F97C-4550-8FAF-6F4F057F04CA}' />
    </window>
    <window class='dashboard' maximized='true' name='Refugee'>
      <viewpoints>
        <viewpoint name='Bar'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[avg:Value:qk]</field>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:CountryName:nk]</field>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[none:Year:ok]</field>
                    <field>[federated.14srq3w1owvxux194omgn0zcfwuk].[usr:Calculation_622622701612044289:ok:1]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1078268.0</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>2019</value>
                  <value>4</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{94DDD727-E7A3-4D81-8EE0-901CDCA99725}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Refugee' width='192'>
      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
      hyPlleHT/wfW8sMeumZccQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
